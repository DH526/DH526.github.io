{"meta":{"title":"Parabellum","subtitle":"首页","description":"窝嫩叠","author":"Agol","url":"http://example.com","root":"/"},"pages":[{"title":"分类","date":"2023-01-21T12:52:22.000Z","updated":"2023-01-21T12:55:36.727Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2023-01-21T12:52:31.000Z","updated":"2023-01-21T12:54:24.638Z","comments":true,"path":"link/index.html","permalink":"http://example.com/link/index.html","excerpt":"","text":""},{"title":"标签","date":"2023-01-21T12:49:03.000Z","updated":"2023-01-21T12:55:23.008Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"计算机网络-域名系统DNS","slug":"计算机网络-域名系统DNS","date":"2019-06-28T13:34:24.000Z","updated":"2022-06-21T03:32:48.670Z","comments":true,"path":"2019/06/28/计算机网络-域名系统DNS/","link":"","permalink":"http://example.com/2019/06/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9FDNS/","excerpt":"","text":"功能把互连网上的主机名转换为IP地址 要点当某一个应用进程需要把主机名解析为IP地址时，该应用进程就调用解析程序，并成为DNS的一个客户。 把待解析的域名放在DNS请求报文中，以UDP用户数据报方式发给本地域名服务器。 本地域名服务器在查找域名后，把对应的IP地址放在回答报文中返回，应用进程获得目的主机的IP地址。 若本地域名服务器不能回答该请求，则此域名服务器暂时成为DNS的另一个客户（递归查询），并向其他域名服务器发出查询请求（一般迭代查询），直至找到能够回答该请求的域名服务器。 域名结构采用层次树状结构的命名方法。 域：名字空间中一个可被管理的划分，域还可以划分为子域，子域还可以划分为子域，形成顶级域、二级域、三级域等等。 DNS不规定一个域名需要包含多少个下级域名，也不规定每一级的域名代表什么意思。 域名是从右往左看的，越往右等级越高。 域名服务器DNS服务器的管辖范围是以区为单位，区可能等于或小于域，但一定不能大于域，即区是域的子集。 一个服务器所负责管辖（或有权限的）的范围叫做区。 一个区中的所有节点必须是能够连通的。 每个区设置响应的权限域名服务器，用来保存该区中的所有主机的域名到IP地址的映射。 根域名服务器根域名服务器是最高层次的域名服务器。 所有的根域名服务器都知道所有的顶级域名服务器的域名和IP地址。 顶级域名服务器负责管理在该顶级域名下注册的所有二级域名。 权限域名服务器负责一个区的域名服务器。 本地域名服务器当一台主机发出DNS查询请求时，这个查询请求报文就发送给本地域名服务器。 不管哪一个本地域名服务器，若要对一个域名进行解析，只要自己无法解析，就首先要求助于根域名服务器。 域名解析过程主机向本地域名服务器查询一般采用递归查询。 如果本地域名服务器不知道被查询域名的IP地址，那么本地域名服务器会以DNS客户的身份，向其他根域名服务器继续发出查询请求报文（即替主机继续查询）。 递归查询的结果： 查到的IP地址 报错，表示无法查询到所需的IP地址 本地域名服务器向根域名服务器查询一般采用迭代查询。 根域名服务器收到本地域名服务器发出的迭代查询请求报文时，本地域名服务器收到的查询结果有两种： 查到的IP地址 下一步向哪个域名服务器查询 顶级域名服务器在收到本机域名服务器的查询请求后，收到的结果有两种： 查到的IP地址 下一步向哪个权限域名服务器查询 就这样，本地域名服务器就这样进行迭代查询，最终把得到的结果返回给发起查询的主机。 高速缓存域名服务器功能：用来存放最近查询过的域名以及从何处获得域名映射信息的记录。 好处：提高DNS查询效率，减轻根域名服务器的负荷和减少互联网上的DNS查询报文数量。 作者：@臭咸鱼 转载请注明出处：https://chouxianyu.github.io 欢迎讨论和交流!","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"计算机网络-运输层复习","slug":"计算机网络-运输层复习","date":"2019-06-28T13:34:11.000Z","updated":"2022-06-21T03:32:48.683Z","comments":true,"path":"2019/06/28/计算机网络-运输层复习/","link":"","permalink":"http://example.com/2019/06/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E8%BF%90%E8%BE%93%E5%B1%82%E5%A4%8D%E4%B9%A0/","excerpt":"","text":"解决的问题实现两台主机中进程之间的通信。 复用和分用 复用 多个应用层进程可使用同一运输层服务 分用 运输层把收到的信息分别交付上面应用层的相应进程 提供可靠性 TCP 面向连接 面向字节流 提供可靠性 不提供广播或多播服务 协议数据单元是TCP报文段 有拥塞控制 每一条TCP连接唯一地被通信两端的两个端点（即两个套接字）所确定。 套接字：IP地址+端口号 UDP 无连接 面向报文（给什么数据，传什么数据） 尽最大努力交付 可以一对多、多对一、多对多 协议数据单元是UDP用户数据报 没有拥塞控制 停止等待协议 无差错情况：停止等待 每发送完一个分组就停止发送，等待对方的确认，在收到确认后再发送下一个分组。 出现差错：超时重传 每发送完一个分组时设置一个超时计数器。 如果超时还未收到确认，就重传分组；在超时前收到确认则撤销该超时计数器。 A发送完一个分组后必须暂时保留已发送到分组的副本，在收到响应确认后才能清除这个副本。 分组和确认分组必须进行编号，这样才能明确发送出去的分组是哪一个收到了确认，哪一个没有收到确认。 可以处理确认迟到的情况。 超时计数器设置的重传时间应当比数据在分组传输的平均往返时间长一些。如果设定得很长，通信效率就会降低；如果设定得太短，会导致不必要的重传，浪费了网络资源。 确认丢失 确认丢失时，发送方进行超时重传，而接收方丢弃这个重复的分组，向发送方发送确认。 确认迟到 确认迟到了，发送方进行超时重传，而接收方丢弃这个重复的分组，向发送方发送确认。 发送方收到迟到的确认什么也不做。 慢开始TCP进行拥塞控制的一种算法。 拥塞是运输层的概念。 发送方维持一个变量：拥塞窗口，让自己的发送窗口等于拥塞窗口，拥塞窗口的大小取决于网络的拥塞程度。 判断网络拥塞的依据就是出现了超时。网络拥塞时就把拥塞窗口减小一些。 慢开始：由小到大逐渐增大发送窗口，也就是由小到大逐渐增大拥塞窗口数值。 发送方每收到一个对新报文段的确认就使发送方的拥塞窗口+1。 作者：@臭咸鱼 转载请注明出处：https://chouxianyu.github.io 欢迎讨论和交流!","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"计算机网络-网络层复习","slug":"计算机网络-网络层复习","date":"2019-06-28T13:34:01.000Z","updated":"2022-06-21T03:32:49.985Z","comments":true,"path":"2019/06/28/计算机网络-网络层复习/","link":"","permalink":"http://example.com/2019/06/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%BD%91%E7%BB%9C%E5%B1%82%E5%A4%8D%E4%B9%A0/","excerpt":"","text":"主要解决的问题网络层讨论的问题是多个网络互连的问题，即分组如何从一个网络传送到另一个网络。 协议数据单元网络层协议数据单元就是IP数据报，又称为数据报、分组或包。 网络层的两种服务网络层的两种服务指的是向运输层提供无连接或面向连接的服务。 选用哪一种服务的实质是：在计算机通信中，可靠交付应当由谁来负责。是网络（网络层）还是端系统（网络层的上几层）？ 可靠：分组无差错按序到达终点，不丢失，不重复 互联网的设计思路：网络层向上只提供简单灵活的、无连接的、尽最大努力交付的数据报服务。分组不进行编号。 虚电路和数据报网络对比7个方面 对比的方面 虚电路服务 数据报服务 可靠性由谁保证 可靠由网络来保证 可靠由用户主机来保证 是否面向连接 面向连接 无连接 是否有终点地址 仅在连接建立阶段使用，每个分组使用短的虚电路号 每个分组都有终点的完整地址 分组转发方式 属于同一虚电路的分组按同一路由转发 每个分组独立选择路由进行转发 结点故障对网络的影响 所有通过故障结点的虚电路均不能工作 出故障的结点可能会丢失分组，一些路由可能发生变化 分组到达终点顺序 按发送顺序到达 不一定按发送顺序到达 端到端的差错处理和流量控制 可以由网络负责，也可以由用户主机负责 用户主机负责 互联网的IP协议提供不可靠的无连接的服务。 中间设备 工作层次 中间设备 物理层 转发器 数据链路层 网桥&#x2F;桥接器 网络层 路由器 网络层以上 网关 IP地址以32位IP地址为例，A、B、C类地址都是单播地址，都由两个固定长度的字段组成，第一个字段是网络号，第二个字段是主机号。一个网络号在整个互联网范围内是唯一的，一个主机号在其网络内必须是唯一的。 一个IP只能对应一个主机；一个主机可以有多个IP，比如路由器。 IP地址分类A、B、C类地址的网络号字段分别是1个、2个和3个字节长，其网络号字段前几位是类别号。 IP地址类型 类别号 可指派网络号 A类 0 1-126 B类 10 128.1-191.255 C类 110 192.0.1-233.255.255 网络号127被保留作为本地环回测试，全0被保留表示本网络。 既然有了MAC地址，为什么要用IP地址？全世界存在各式各样的网络，它们使用不同的硬件地址。要使这些异构网络能够互相通信就必须进行非常复杂的硬件地址转换工作，因此由用户主机来完成这项工作几乎是不可能的事。但IP编址把这个复杂问题解决了。 分组转发路由表指出到某个网络应该如何转发，每行对应于一个网络。 在互联网上转发分组时，是从一个路由器转发到下一个路由器。 每条路由主要信息：（目的网络地址，下一跳地址）。下一跳地址是路由器端口的IP地址。 使用子网时分组的转发 使用子网划分后，每条路由主要信息：（目的网络地址，子网掩码，下一跳地址）。 主机 要发数据包时先判断是直接交付还是间接交付：即发送的这个分组是在本子网上进行直接交付还是要通过本子网的路由器进行间接交付：将与本子网的子网掩码和目的IP地址相与求得目的网络地址与该子网地址比较，得出是否直接交付。 路由器 拿到目的IP地址后对路由器直接相连的网络逐个进行检查（直接相连的网络可以直接写在路由表的最前边），将各网络的子网掩码和目的IP地址相与求得目的网络地址，判断该网络地址是否和对应的目的网络地址匹配。若匹配则直接交付，转发任务结束；否则就是间接交付，进行下一步。 若有特定主机路由，则把数据传送给路由表中指明的下一跳，否则执行下一步。 用路由表每一行中的子网掩码和目的IP地址相与，若结果与该行目的网络地址匹配，则把数据传送给该行指明的下一跳路由器；否则执行下一步 若路由表中有一个默认路由，则把数据报传送给路由表指定的默认路由器；否则，执行下一步 报告转发分组出错。 ARP功能：从网络层使用的IP地址，解析出在数据链路层使用的硬件地址。 操作：去ARP高速缓存里找，找不到就广播ARP请求分组获得目的硬件地址（可以是路由器或主机的）并记录在ARP高速缓存中。 ARP消息类型 ARP request ARP请求分组（1），用于请求某IP主机的硬件地址。 广播。 主要内容：我的IP是xxx，我的硬件地址是xxx，我想知道IP地址是xxx的地址。 ARP response ARP响应分组（2），用于指出某IP主机的硬件地址。 单播。 主要内容：我的IP是xxx，我的硬件地址是xxx 假设主机A发送ARP请求分组请求主机B的物理地址，不久之后很有可能B也要向A发送数据报。所以ARP请求分组包含了源IP，B收到ARP请求分组时会把A的IP地址和物理地址记录在其ARP高速缓存中。 ARP高速缓存如果没有ARP高速缓存，任何一台主机每次进行通信时都必须在网络上广播ARP请求分组，使网络上的通信量大大增加。 生存时间 ARP对保存在ARP高速缓存中的每一个映射地址项目都设置生存时间，凡超过生存时间的项目就从高速缓存中删除掉。这样可以及时更新各主机与其物理地址的映射关系，处理主机网络适配器故障或更新等情况。 生存时间设置得太长会使映射关系发生变化的主机迟迟无法通信，设置得太短会使ARP请求和响应分组的通信太频繁。 ARP属于网络层不能说“ARP向网络层提供了服务”，因为ARP本身是网络层的一部分。数据链路层使用硬件地址而不使用IP地址，因此ARP不在数据链路层。 不需要发送ARP请求分组的情况 源主机的ARP高速缓存中已有目的IP地址的项目 源主机发送广播分组 源主机和目的主机使用点对点链路 IP子网IP地址与子网掩码相与 同样的IP地址和不同的子网掩码可以得出相同的网络地址。但是不同的掩码效果是不同的：可划分的子网数和每一个子网中的最大主机数都是不一样的。 知道A和B的IP，想让他们在一个子网内，应如何给它们分配子网掩码？ 计算子网号个数时要去除全0和全1的情况，即减2。 作者：@臭咸鱼 转载请注明出处：https://chouxianyu.github.io 欢迎讨论和交流!","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"计算机网络-数据链路层复习","slug":"计算机网络-数据链路层复习","date":"2019-06-28T13:33:54.000Z","updated":"2022-06-21T03:32:49.976Z","comments":true,"path":"2019/06/28/计算机网络-数据链路层复习/","link":"","permalink":"http://example.com/2019/06/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E5%A4%8D%E4%B9%A0/","excerpt":"","text":"网桥在数据链路层进行互连。 数据链路层研究的问题在同一个局域网中，分组怎么从一台主机传送到另一台主机上（不经过路由器转发）。 分组是网络层的协议数据单元，数据链路层的协议数据单元是帧。 链路和数据链路链路也叫物理链路。 一个结点到相邻结点的一段物理线路，而没有其他的交换结点。 数据链路也叫逻辑链路。 链路加上实现协议的硬件和软件形成数据链路。 常用方法： 网络适配器，即网卡，既有软件，又包括硬件，其一般包括物理层和数据链路层两层的功能。 链路和数据链路有什么区别？“电路接通了”和“数据链路接通了”的区别在哪？所谓链路就是从一个结点到相邻结点的一段物理线路，而中间没有任何其他的交换结点。在进行数据通信时，两个计算机之间的通信路径往往要经过许多段这样的链路。可见链路只是一条路径的组成部分。 数据链路则是另外一个概念。这是因为当需要在一条线路上传输数据时，除了必须有一条物理线路外，还必须有一些必要的通信协议来控制这些数据的传输。若把实现这些协议的硬件和软件加到链路上，就构成了数据链路。现在最常用的方法是使用网络适配器（如拨号上网使用拨号适配器，以及通过以太网上网使用局域网适配器）来实现这些协议的硬件和软件。一般的适配器都包括了数据链路层和物理层这两层的功能。 也可以把链路分为物理链路和逻辑链路。物理链路就是上面说的链路，而逻辑链路就是上面的数据链路，是物理链路加上必要的通信协议。 “电路接通了”表明物理连接已经能够传输比特流了。 而“数据链路接通了”是指在物理连通的基础上，建立数据链路，实现封装成帧、透明传输、差错检测等功能。 帧数据链路层的协议数据单元。 数据链路层三个基本问题封装成帧数据链路层在网络层交下来的IP数据报（即分组）前后分别添加首部和尾部形成帧。（OSI的数据链路层把传输的比特流划分成帧。） 只有数据链路层会添加尾部，除物理层外，即应用层、传输层、网络层、数据链路层都会为上边传下来的数据添加首部。 首部和尾部包括许多必要的控制信息（如同步信息、地址信息、差错控制等）， 问题来源为使接收端能从收到的比特流中准确地找到帧的开始和结束位置。 解决问题首部和尾部的一个重要作用就是帧定界（即确定帧的界限）： SOH（Start Of Header），放在帧的最前边，表示帧的开始。 EOT（End Of Transmission），放在帧的最后边，表示帧的结束。 透明传输问题来源由于帧开始和结束的标记使用专门指明的控制字符，所传输的数据中不能出现8比特的组合和用作帧定界的控制字符的比特编码一样，否则会出现帧定界错误。 解决问题 解决方法：字节填充 发送端的数据链路层在数据中控制字符和转义字符的前边插入一个转义字符ESC； 接收端的数据链路层在把数据送往网络层之前删除这个插入的转义字符ESC。 简单来说，（要注意：添加和删除ESC是对于数据中的ESC、SOH、EOT来说的） 发送端的数据链路层在数据中的ESC、SOH、EOT前添加ESC， 接收端的数据链路层把数据中ESC、SOH、EOT前的ESC去掉 差错检测问题来源 比特差错 现实的通信链路不是理想的，传输过程中可能出现比特差错（1变成0，或0变成1）。 比特差错并不是传输差错。 为保证数据传输的可靠性，必须进行差错检测。 CRC数据链路层广泛使用了循环冗余校验码CRC的检错技术。 若数据链路层仅仅使用CRC，则只能实现无差错接受、无比特差错的传输，这并不是可靠传输。 &#x3D;&#x3D;CRC可参考计组复习笔记，超链接&#x3D;&#x3D; CRC和FCS不同 帧检验序列FCS，是数据后边的冗余码；而CRC是一种检错方法。 编码方法 数据左移几位（P的位数-1）后模2除以生成多项式P，则得应在数据后添加的余数 检错方法 拿到的数据加冗余码，模2除生成多项式P，求得余数 若余数为0，则无误，接受； 若不为0，则有误，就丢弃。 为什么三个问题必须加以解决封装成帧就是在一段数据的前后分别添加首部和尾部（在首部和尾部里面有许多必要的控制信息），这样就构成了一个帧。接收端在收到物理层上交的比特流，就能根据首部和尾部的标记，从收到的比特流中识别帧的开始和结束。首部和尾部的一个重要作用就是帧定界，如果不进行封装成帧，那么数据链路层在收到一些数据时，就无法知道对方传输的数据中哪些是数据，哪些是控制信息，甚至数据中有没有差错也不知道，也无法知道数据传送结束了没有，因此不知道应该在什么时候把收到的数据给上一层。 上层交下来的数据，不管是什么形式的比特组合，都必须能够正确传送。由于帧的开始和结束的标记是使用专门指明的控制字符，因此，所传输的数据中的任何比特组合一定不允许和用作帧定界的控制字符的比特编码一样，否则就会出现帧定界的错误。数据链路层不应对传送的数据提出限制，即不应当规定某种形式的比特组合不能够传送。如果没有透明传输，就可能会出现帧定界错误。 如果数据链路层没有差错检测，那么当目的主机收到其他主机发送来的数据时，在交给高层后，如果应用程序要求收到的数据必须正确无误，那么目的主机的高层软件可以对收到的数据进行差错检测。如果发现数据中有差错，就可以请求源主机重传这些数据。这样做就可以达到正确接收数据的目的。但这种工作方式有一个很大的缺点，就是一些在传输过程中出现了错误的数据（这些已经是没有用处的数据）还会继续在网络中传送，这样就浪费了网络的资源。 点对点协议PPPPPP协议面向连接。 PPP控制字符：0x7E 主要特点简单 字节填充PPP使用异步传输时，转义符定义为0x7D，使用字节填充 处理情况 填充前 填充后 控制字符 0x7E (0x7D,0x5E) 转义字符 0x7D (0x7D,0x5D) ASCII码控制字符(小于0x20) 0x03 (0x7D,0x23) 零比特填充PPP使用同步传输时 保证信息字段中不会出现连续6个1，方法如下 发送端 扫描信息字段，发现连续5个1，在其后边添1个0 接收端 扫描信息字段，发现连续5个1，则删除其后边的1个0 局域网的数据链路层局域网的协议结构一般不包括网络层。 以太网以太网是典型的局域网，几乎成了局域网的同义词。 为了通信的简便，以太网采取了以下两种措施： 无连接、不可靠 以太网发送的数据都使用曼彻斯特编码 截断二进制指数退避算法以太网使用截断二进制指数退避算法来确定碰撞后重传的时机。 设碰撞次数为$k$，则$k&#x3D;Min[重传次数，10]$，重传时间为$0$到$2^k-1$个时间片 局域网主要特点 网络为一个单位所拥有 地理范围和站点数目均有限 网络拓扑星形网现在主要用这个， 集线器星型拓扑： 易维护，物理上是星形，逻辑上是总线型 集线器工作在物理层 环形网一个电脑出问题，会影响整个局域网。 总线网所有的主机都连在一根总线上。 广播 一台计算机发送数据，总线上所有计算机都能检测到这个数据 一对一 给每个适配器一个独一无二的MAC地址，在发送数据帧时，在帧的首部写明接收站的地址。 当数据帧中的目的地址与适配器ROM中存放的MAC地址一致时，该适配器才接受这个数据帧，否则丢弃。 CSMA&#x2F;CD协议载波监听多路访问&#x2F;碰撞检测，协议的实质是载波监听和碰撞检测。 以太网扩展 作者：@臭咸鱼 转载请注明出处：https://chouxianyu.github.io 欢迎讨论和交流!","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"计算机网络-物理层复习","slug":"计算机网络-物理层复习","date":"2019-06-28T13:33:46.000Z","updated":"2022-06-21T03:32:48.683Z","comments":true,"path":"2019/06/28/计算机网络-物理层复习/","link":"","permalink":"http://example.com/2019/06/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%89%A9%E7%90%86%E5%B1%82%E5%A4%8D%E4%B9%A0/","excerpt":"","text":"物理层主要解决的问题进行信号和比特流的转换，实现透明传输比特流，尽量使数据链路层感觉不到传输媒体之间的差异。 物理层的主要任务机械特性接插件的形状、尺寸、引脚数目和排列等规格 电气特性电压范围 功能特性某电平电压的意义 过程特性不同功能的各种可能事件的出现顺序。 协议数据单元物理层上所传数据的单位是比特。 数据通信系统的模型源系统源点又称信源，源站。 产生要传输的数据（比特流）。 发送器对源点生成的比特流进行编码，然后在传输系统中进行传输。 传输系统可以是简单的传输线，也可以是复杂的网络系统。 目的系统接收器接收信号，转换为终点可以处理的信息。 比如解调器，把模拟信号还原为比特流。 终点又称目的站、信宿。 获取接收器传来的比特流。 通信常用术语通信的目的是传送消息。 消息消息是本质。 数据数据是运送消息的实体。 信号信号是数据的电气或电磁表现。 信号的分类根据信号中代表消息的参数的取值方式分类 模拟信号代表消息的参数取值是连续的。 数字信号代表消息的参数取值是离散的。 码元：承载信息的基本信号单位。 有两个要素：码元的取值个数$M$（$M$进制码元）和码元携带的信息量（即码元的位数）$n$。 $n\\geq log_2^M$ https://zhidao.baidu.com/question/680218902599074452.html 调制 基带信号 带通信号 频率 低，甚至有直流成分 高 传播距离 短 远 许多信道并不能传输低频分量或直流分量。为解决这个问题，必须对基带信号进行调制。 基带调制作用又称编码。 仅对基带信号的波形进行变换，使其与信道特性相适应。 变换后的信号仍为基带信号。 方法 不归零制 归零制 曼彻斯特编码 差分曼彻斯特编码 载波调制作用使用载波，把基带信号的频率范围搬移到较高的频段，并转换为模拟信号。 经过载波调制后的信号称为带通信号，带通指仅在一段频率范围内能够通过信道。 方法 调幅 调频 调相 信道信道指向某一个方向传送信息的媒体。 一条通信线路往往包含一条发送信道和一条接收信道。 三种通信基本方式从通信的双方信息交换的方式来看 单工通信 半双工通信 全双工通信 通信方向 通信只能有一个方向 双向交替通信 双向同时通信 信道数 一条 两条 两条 信道的极限容量信号在信道上传输会失真。 从概念上讲，限制码元在信道上的传输速率的因素有两个： 信道能够通过的频率范围码间串扰：接收端收到的信号波形失去了码元之间的清晰界限。 奈氏准则：指出在假定的理想条件下，为避免码间串扰，码元的传输速率的上限值。 在任何信道中，码元的传输速率是有上限的，超过上限，就会出现严重的码间串扰问题。 波特：Baud，码元传输速率的单位。1 Baud即每秒传送1个码元。 信噪比信噪比就是信号平均功率$S$和噪声平均功率$N$之比，常记为$S&#x2F;N$，并用分贝$dB$作为度量单位。$$信噪比(dB)&#x3D;10log_{10}^{S&#x2F;N}(dB)$$香农公式指出，信道的极限信息传输速率$C$是：$$C&#x3D;W\\ log_2^{1+S&#x2F;N}(bit&#x2F;s)$$式中，$W$为信道的带宽，单位为$Hz$。 香农公式表明：信道的带宽或信噪比越大，信道的极限传输速率就越大。 其他因素对于频带宽度、信噪比和码元传输速率已确定的信道，我们可以通过让每一个码元携带更多的信息量提高信息的传输速率。 码元个数不是越多越好。 如果每个码元携带的信息量$n$越大，即码元取值的数量越多，则在接收端进行调解时要正确识别每一个码元就越困难，导致出错率增加。 奈氏准则和香农公式的主要区别 奈氏准则指出了，码元传输速率是受限的，不能任意提高，否则在接收端就无法正确判定码元是1还是0（因为有码元之间的相互干扰）。 奈氏准则是在理想条件下推导出的。在实际条件下，最高码元传输速率要比理想条件下得出的数值还要小些。电信工程技术人员的任务就是要在实际条件下，寻找出较好的传输码元波形，将比特转换为较为合适的传输信号。 需要注意的是，奈氏准则并没有对信息传输速率给出限制。要提高信息传输速率就必须使每一个传输的码元能够代表许多个比特的信息。这就需要很好的编码技术。 香农公式给出了信息传输速率的极限，即对于一定的传输带宽（以赫兹为单位）和一定的信噪比，信息传输速率的上限就确定了。这个极限是不能够突破的。要想提高信息的传输速率，或者必须设法提高传输线路的带宽，或者必须设法提高所传信号的信噪比，此外没有其他任何办法。 香农公式告诉我们，若要得到无限大的信息传输速率，只有两个办法：要么使用无限大的传输带宽，要么使信号的信噪比无限大（即采用没有噪声的传输信道或使用无限大的发送功率）。当然这都是不可能的。 物理层下面的传输媒体物理层的“连接”不一定是使用导线的“连接”，比如无线连接就不是使用导线的“连接”。 导引型传输媒体非导引型传输媒体信道复用技术复用：允许用户使用一个共享信道进行通信，降低成本，提高利用率。 频分复用所有用户在同一时间占用不同的带宽资源。 用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带。 波分复用 就是光的频分复用。 时分复用又称同步时分复用。考过图2-15。 所用用户在不同时间内用同样的频度带宽。 由于计算机数据的突发性质，时分复用时一个用户对已经分配到的子信道的利用率一般是不高的。 统计时分复用 与同步时分复用相比，它按需动态分配时间。 频分复用和时分复用的优缺点 优点 技术比较成熟 缺点 不够灵活 码分复用又称码分多址。 各用户使用经过特殊挑选的不同码型，因此各用户之间不会造成干扰。 每个用户可以在同样的时间使用同样的频带进行通信。 码片定义每一个比特用m个比特表示，这m个比特称为码片。 每个用户发送的是码片（代表1）、码片反码（代表0）或不发送。 接收方用想接收的发送方的码片与收到的信号进行规格化內积。 若规格化內积为1，则发送方发送了码片，即1；若为-1，则发送方发送了码片反码，即0。 码片特点內积：同位相乘之和 规格化內积：內积除以位数 正交：內积为0 分配给每个用户的码片必须各不相同，并且相互正交。 某用户码片与其他用户码片（或码片的反码）內积为0。 码片与自身规格化內积为1。 码片与自身反码规格化內积为-1。 作者：@臭咸鱼 转载请注明出处：https://chouxianyu.github.io 欢迎讨论和交流!","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"计算机网络-第一章复习","slug":"计算机网络-第一章复习","date":"2019-06-28T13:33:39.000Z","updated":"2022-06-21T03:32:51.500Z","comments":true,"path":"2019/06/28/计算机网络-第一章复习/","link":"","permalink":"http://example.com/2019/06/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%AC%AC%E4%B8%80%E7%AB%A0%E5%A4%8D%E4%B9%A0/","excerpt":"","text":"Internet如何翻译有两种翻译方式： 因特网国家推荐 互联网现实中大多使用这个词。 互联网的重要特点连通性世界各地的用户都可以交换信息，好像彼此之间直接连通一样。 共享即资源共享，如信息、软件、硬件共享等。 两个认识互联网的角度应用工作原理课本是从这个角度来讲解的，我们从这个角度来学习。 计算机网络的组成定义：计算机网络由若干结点（node）和连接这些结点的链路（link）组成。 结点可以是计算机、集线器、路由器、交换机等。 链路互连网与互联网互连网internet 定义 通用名词，泛指通过路由器将网络连起来形成的网络。 其中网络间的通信协议可以是任意的。 互连不仅是物理上，还要通过软件连接。 互联网Internet 定义 互联网是全球最大的、开放的、由众多网络相互连接而成的特定互连网。 采用TCP&#x2F;IP协议族作为通信规则。 前身是美国的ARPANET。 三层ISP结构ISP，互联网服务提供者。 互联网现在采用三层ISP结构。 本地ISP地区ISP主干ISPIXP允许两个网络直接相连并交换信息。 互联网的组成边缘部分与网络相连的计算机常称为主机。 定义 连接在互联网上的所有主机。 由用户（个人、公司）控制。 进行通信和资源共享。 主机通信方式 对象 计算机通信的对象是应用层中的进程。 客户&#x2F;服务器方式即C&#x2F;S方式。 客户和服务器指通信中所涉及的两个应用进程。 客户&#x2F;服务器模式描述的是进程之间服务和被服务的关系。 客户是服务请求方，服务器是服务提供方。 客户和服务器都要使用互联网核心部分提供的服务。 客户必须知道服务器程序的地址，服务器不需要知道客户程序的地址。 对等连接方式对等连接（peer to peer），P2P。 定义 两台主机在通信时并不区分谁是客户或服务器。 本质上还是C&#x2F;S方式。 核心部分 定义 由大量网络和连接这些网络的路由器组成。 由ISP控制。 为边缘部分提供服务。 工作方式核心部分的工作方式就是路由器的工作方式。 存储转发 路由器间不断交换路由信息 三种交换方式 严格来讲，分组交换也是可以面向连接的 现在用的是分组交换 电路交换 并不是真正意义上的交换 主要特点：面向连接 建立连接、通信、释放连接 在通信的全部时间内，通信的两个用户始终占用端到端的通信资源。 优点 静态分配传输带宽，只要建立了连接，网络发生拥塞也不会影响通信质量。 缺点 计算机通信时，数据具有突发性，线路上真正用来传送数据的时间往往不到10%，造成通信线路资源的浪费。 如果通信链路是由多段链路组成的，只要有一段链路出现故障，就不能通信。 分组交换 主要特点：采用存储转发技术 将报文拆分成多个分组，加上头部 通过路由器以分组为单位进行存储转发 在接收端将分组组装成报文 优点 高效 动态分配传输带宽，逐段占用通信链路。 灵活 为每一个分组独立地选择最合适的转发路由。 迅速 不需要建立连接就可以向其他主机发送分组。 可靠 保证可靠性的网络协议、分布式多路由的分组交换网使网络有很好的生存性。 某个结点或者链路出现故障时，分组传送的路由可以自适应地动态改变。 缺点 存储转发时需排队，造成一定时延。当网络拥塞非常严重时，整个网络也可能会瘫痪。 分组的首部造成一定开销。 报文交换 主要特点： 采用存储转发技术，但报文不分组 适用于间歇式轻负载 与分组交换相比： 优点 省去了划分分组的步骤 省去了接收端组装分组的步骤 缺点 灵活性不如分组交换 哪个交换方式最好？不能说哪个方式一定好或坏 若需连续传送大量数据，且其发送时间远大于连接建立时间，则电路交换的传输速率较快。 报文交换和分组交换不需要预先分配传输带宽，在传送突发数据时可提高整个网络的信道利用率。 由于一个分组的长度远远小于整个报文的长度，因此分组交换比报文交换的时延小；同时也具有更好的灵活性。 计算机网络性能指标速率 也称为数据率（data rate）或比特率（bit rate）。 定义 连接在计算机网络上的主机在数字信道上传输数据的速率。 单位是b&#x2F;s，kb&#x2F;s，Mb&#x2F;s，Gb&#x2F;s &#x3D;&#x3D;信道：一个发送端，一个接收端&#x3D;&#x3D; 带宽 定义 数字信道所能传输的最高速率。 毫无疑问，带宽单位和速率一样。 吞吐量 定义 单位时间内通过某个网络（或信道、接口）的实际的数据量。 单位是b，Mb等。 时延$总时延&#x3D;发送时延+传播时延+处理时延+排队时延$ 一般来说，小时延的网络优于大时延的网络 一个低速率、小时延的网络可以优于一个高速率、大时延的网络。 在总时延中，哪一种时延占主导地位，必须具体分析。 发送时延又叫传输时延，发送速率又叫传输速率。 $发送时延&#x3D;\\frac{数据帧长度(bit)}{发送速率(bit&#x2F;s)}$ 可见发送时延并非固定不变。 对于高速网络链路，我们提高的仅仅是数据的发送速率，而不是比特在链路上的传播速率。 传播时延$传播时延&#x3D;\\frac{信道长度(m)}{电磁波在信道上的传播速率(m&#x2F;s)}$ 光纤与铜线相比降低了发送时延，光纤的传播速度反而不如铜线传播速度快。 处理时延主机或路由器在收到分组时要花费一定时间进行处理。 排队时延分组在路由器中可能要排队。 时延带宽积时延带宽积又称为以比特为单位的链路长度。 $时延带宽积&#x3D;传播时延\\times带宽$ 时延带宽积反映传输时线路上数据的多少，即线路上的比特数。 传播时延决定线路的长度 带宽决定每位的长度 往返时间RTT定义：双向交互一次所需的时间。 从发送方发送数据开始，到发送方收到接收方的确认。 ping www.baidu.com 利用率 信道利用率并非越高越好 信道或网络的利用率过高会产生非常大的时延。 令$D_0$表示网络空闲时的时延，$D$表示网络当前的时延，$U$为网络利用率， 则$D&#x3D;\\frac{D_0}{1-U}$。 信道利用率$信道利用率&#x3D;\\frac{有数据通过时间}{总时间}$ 网络利用率定义：信道利用率加权平均值 分层分层思想 相互通信的两个计算机系统必须高度协调，而这种协调是十分复杂的。 分层可将庞大而复杂的问题，转化为若干较小的局部问题，而这些较小的局部问题就比较易于研究和处理。 三种分层方法OSI是法律上的国际标准，TCP&#x2F;IP是事实上的国际标准。 七层协议：OSI 概念清楚，理论较为完整。 但既复杂又不实用。 四层协议：TCP&#x2F;IP 简洁，得到广泛应用。 实质内容只有上三层，网络接口层并没有什么具体内容。 五层协议 综合七层协议和四层协议的优点：既简洁又能将概念阐述清楚。 好处5个 各层间是独立的 每一层只实现一种相对独立的功能，上层仅知道下层的接口，而不需知道其如何实现。 灵活性好 只要层间接口关系保持不变，可以对各层进行修改。 结构上可分割开 各层都可以采用最合适的技术实现 易于实现和维护 整个系统被分解为若干个相对独立的子系统，每个子系统都易于实现和维护 能促进标准化工作 每一层的功能及其所提供的服务都已有了精确的说明 坏处分层应使每一层的功能非常明确，所以层次的划分并不容易。 层数太少，会使每一层的协议太复杂； 层数太多，会使各层在功能上有重叠，造成额外开销。 对等层在OSI参考模型中，位于同一水平行（同一层）上的系统构成了OSI的对等层。 协议定义：在ISO&#x2F;OSI参考模型中，同层对等实体间信息交换时必须遵守的规则。 每层都有协议，有的层只能有一个协议，有的层可以有多个协议。 网络协议主要由以下三个要素构成： 语法数据与控制信息的结构和格式 语义需要发出何种控制信息，完成何种动作以及做出何种响应 同步事件实现顺序的详细说明 作者：@臭咸鱼 转载请注明出处：https://chouxianyu.github.io 欢迎讨论和交流!","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"计算机网络概述","slug":"计算机网络概述","date":"2019-06-25T12:28:43.000Z","updated":"2022-06-21T03:32:47.081Z","comments":true,"path":"2019/06/25/计算机网络概述/","link":"","permalink":"http://example.com/2019/06/25/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%A6%82%E8%BF%B0/","excerpt":"","text":"之前看韩利辉计网视频的笔记。 网络局域网覆盖范围小 自己花钱买设备 带宽固定 自己维护 比如学院的局域网： 机房的汇聚层交换机连接各教室的交换机，教室的接入层交换机连接各电脑。 两两之间的网线不超过100米，10M 100M 1000M 接入层交换机带宽为百兆，每个口都是百兆。汇聚层交换机带宽要比接入层交换机大。 规范的局域网应该是分层的 广域网超过100米，比如电话线拨号上网，带宽不固定，花钱买带宽、维护等服务 Internet由众多ISP组成，ISP是Internet Service Provider，因特网服务提供商。 各提供商都有自己的机房，对网民提供Internet连接。 各提供商之间最多有一根线相连，所以我用移动的网访问电信的服务器可能会很慢。 有的网站会在各运营商的机房都买一个服务器，或者双线机房（机房里有两种运营商）。 IP和MAC计算机有一个IP地址。 网段。 子网掩码，告诉计算机哪儿是网络部分，哪儿是主机部分。 路由器作用：负责在不同网段转发数据 路由器的端口也有MAC地址 路由器的端口相当于计算机的一个网卡，也有地址 网关：告诉计算机去哪个网段，&#x3D;&#x3D;指向路由器&#x3D;&#x3D;。 网卡：MAC地址（物理地址，唯一），出厂已经固定在网卡里，48位二进制。 MAC和IP分别是物理和逻辑上的概念 计算机上发数据包给DNS服务器（计算机配的有），DNS将域名解析成IP，返给计算机 数据包数据、源IP、目标IP 就像一封信 计算机数据包最大1500字节。 数据一次传不完的话，数据帧是有编号的。 数据帧数据包加上源MAC、目标MAC，就是数据帧。 想把数据包传给目标IP，需要路由器，用MAC找到路由器。 然后路由器根据目标IP更新源MAC和目标MAC，最短路径。 数据帧传给交换机，交换机传给路由器，路由器给路由器，最后给交换机，交换机给计算机。 客户机：给我数据 服务器：好的，给你 客户机：已接收，给我下一个数据 服务器：好的，给你 服务器不知道客户机的MAC地址，可以知道客户机的IP。 为什么不能只用MAC标识电脑？ 如果全球计算机都是用交换机连接的，不需要路由器，就可以只用MAC标识电脑。但这不可能。 网卡有缓存，发送缓存，接收缓存。 OSI参考模型7层，国际标准化组织分析计算机通讯得出的。 好处： 不同厂商生产设备可以一起用 各层较为独立，每一个模块有变化，不会影响另一个模块。这并不代表各层之间没有关系。 k层为k+1层提供服务。 分层的思想是使用网络的指导原则。 应用层所有能产生网络流量的程序，记事本就不是，QQ就是。 表示层在传输之前进行的东西。 比如在切割成数据包传输之前是否进行压缩、加密处理、编码 会话层session，规定哪个服务器和客户机哪个窗口交互。 cmd中输入netstat -n 可以查看会话。 只要和其他计算机有数据传输，就会建立会话。我们就可以查到它。 通过查看会话 可以查木马。木马和病毒不一样。 输入netstat -nb可以会话是谁建立的。 传输层实现可靠传输、流量控制、不可靠传输。 可靠传输：超时重传 流量控制：客户机给服务器一个数据包说慢点 不可靠传输：比如向DNS通过域名查IP，双方一个数据包就可以解决问题，这种通讯不需要建立会话，不需要给数据包编号。就不用超时重传，再来一次就好了。 网络层选择最佳路径、规划IP地址。 人工指定路径：通过静态路由 数据链路层定义帧的开始和结束、透明传输、差错校验。 用特殊位表示开始和结束，看到开始标志就接收 看到结束标志就结束 启动密码子 终止密码子 透明传输：一部分数据和结束位一样，会在数据那里插入一个特殊的位，表明这不是真正的结束。接收端接收以后再把插入的位去掉。 差错检验：查出错误，但不会纠正错误，纠正是传输层做的 物理层定义网络设备接口标准、电气标准、如何在物理链路上传输得更快 接口标准：不同公司生产的网线、网卡都能使用 电气标准：比如用几伏电压代表1。 OSI和网络排错应该从最底层开始查找。 物理层查看连接状态、查看发送和接受到的数据包大小。 数据链路层MAC地址冲突、ADSL欠费、网速没办法协商、计算机连接到错误的VLAN 网络层配置了错误的IP地址、子网掩码、网关 路由器上没有到达目标网络的路由 应用层应用层在这儿指网络层之上的 应用程序配置错误 OSI和网络安全物理层交换机不用的口 把网线拔掉 数据链路层ADSL账号密码、无线AP、VLAN、交换机端口绑定MAC地址 网络层在路由器上使用ACL控制数据包流量、Windows高级防火墙 应用层应用层在这儿指网络层之上的。 开发的应用程序没漏洞 SQL注入 OSI和TCP&#x2F;IP协议 作者：@臭咸鱼 转载请注明出处：https://chouxianyu.github.io 欢迎讨论和交流!","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"计算机网络-实验（四）TCP抓包分析","slug":"计算机网络-实验（四）TCP抓包分析","date":"2019-06-12T14:40:43.000Z","updated":"2022-06-21T03:32:50.081Z","comments":true,"path":"2019/06/12/计算机网络-实验（四）TCP抓包分析/","link":"","permalink":"http://example.com/2019/06/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E5%AE%9E%E9%AA%8C%EF%BC%88%E5%9B%9B%EF%BC%89TCP%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90/","excerpt":"","text":"实验内容 学会安装使用自由软件SNORT 截获以太网数据包，并描述以太网数据包的各层的帧结构。 截获ARP，TCP协议数据包并进行分析 实验步骤实验需要两个主机A(192.168.1.104)和B(192.168.1.105)，A访问B，B进行TCP和ARP抓包，本实验报告为抓包主机B视角。 环境配置主机B需要进行环境配置：设置账户密码、打开FTP站点 设置账户密码控制面板——用户账户——设置密码 打开FTP站点控制面板——管理工具——Internet信息服务——FTP站点——属性——用户名——浏览——查找账户——选择ligong——应用——确认 A访问B ftp open 192.168.1.105 输入用户名(ligong)和密码(123，也就是刚才设置的密码) 一些操作，如dir quit，退出，断开连接 B进行抓包使用Snort软件进行抓包，进入D:/snort/bin目录。 输入snort -dev -l /snort/log，开始抓包，按下Ctrl+C停止抓包。 如果主机B抓到了A发出的FTP请求，在D:/snort/log目录下可以找到文件夹192.168.104，在其中可以看到名如TCP_1980-21.ids的文件，21为端口号。 数据包分析ARP抓包失败，原因未知，其他同学似乎也未抓到，抓到的都是3号机器广播的ARP包。下边进队TCP数据包进行分析。 TCP数据包分析 TCP是面向连接的协议，所以TCP运输连接的建立和释放时每一次通信中必不可少的过程。 运输连接分为三个阶段：连接建立、数据传送、连接释放。 每一次握手大概包括以下内容： 第一行数据包括了时间戳、源物理地址、目的物理地址、类型、长度； 第二行数据包括了源IP、目的IP、TCP、TTL、TOS、ID、IP长度、Dgm长度； 第三行数据包括SYN位、ACK位、序号、确认号、窗口大小、TCP长度； 第四行信息包括TCP选项等。 以下主要选取TCP数据包中连接建立（三次握手）和连接释放（四次握手）的相关内容进行分析。 连接建立12345601/01-01:40:15.948470 0:16:EC:D2:50:7D -&gt; 0:19:21:57:7:85 type:0x800 len:0x3E192.168.1.104:1980 -&gt; 192.168.1.105:21 TCP TTL:128 TOS:0x0 ID:11743 IpLen:20 DgmLen:48 DF******S* Seq: 0x75C7623D Ack: 0x0 Win: 0xFFFF TcpLen: 28TCP Options (4) =&gt; MSS: 1460 NOP NOP SackOK =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ 上边为连接建立的第一次握手，可以看到数据包从主机A（104）发往主机B（105）的21号端口； SYN位设置为1； 序号为0x75C7623D。 12345601/01-01:40:15.948524 0:19:21:57:7:85 -&gt; 0:16:EC:D2:50:7D type:0x800 len:0x3E192.168.1.105:21 -&gt; 192.168.1.104:1980 TCP TTL:128 TOS:0x0 ID:11647 IpLen:20 DgmLen:48 DF***A**S* Seq: 0xF085016 Ack: 0x75C7623E Win: 0xFFFF TcpLen: 28TCP Options (4) =&gt; MSS: 1460 NOP NOP SackOK =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ 上边为连接建立的第二次握手，可以看到数据包从105发往104， SYN位设置为1； ACK位设为1； 序号为0xF085016； 确认号为0x75C7623E，即确认号为上一次握手序号+1的值。 1234501/01-01:40:15.948661 0:16:EC:D2:50:7D -&gt; 0:19:21:57:7:85 type:0x800 len:0x3C192.168.1.104:1980 -&gt; 192.168.1.105:21 TCP TTL:128 TOS:0x0 ID:11744 IpLen:20 DgmLen:40 DF***A**** Seq: 0x75C7623E Ack: 0xF085017 Win: 0xFFFF TcpLen: 20=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ 上边为连接建立的第三次握手，可以看到数据包从104发往105， ACK位设为1； 序号为0x75C7623E，即序号为上一次握手的确认号，本质是A上一次向B发出的请求的序号+1； 确认号为0xF085017，即确认号为上一次握手序号+1的值。 数据传送 连接释放注意：这里是服务器主动释放连接，与教材上写的客户机主动释放情况不同。 12301/01-01:40:25.769622 0:19:21:57:7:85 -&gt; 0:16:EC:D2:50:7D type:0x800 len:0x36192.168.1.105:21 -&gt; 192.168.1.104:1980 TCP TTL:128 TOS:0x0 ID:11666 IpLen:20 DgmLen:40 DF***A***F Seq: 0xF085092 Ack: 0x75C7625B Win: 0xFFE2 TcpLen: 20 上边为连接释放的第一次握手，可以看到数据包从105发往104， ACK位设为1； FIN位设为1； 序号为0xF085092； 确认号为0x75C7625B。 12301/01-01:40:25.769759 0:16:EC:D2:50:7D -&gt; 0:19:21:57:7:85 type:0x800 len:0x3C192.168.1.104:1980 -&gt; 192.168.1.105:21 TCP TTL:128 TOS:0x0 ID:11763 IpLen:20 DgmLen:40 DF***A**** Seq: 0x75C7625B Ack: 0xF085093 Win: 0xFF84 TcpLen: 20 上边为连接释放的第二次握手，可以看到数据包从104发往105， ACK位设为1； 序号为0x75C7625B，即序号等于上次握手确认号； 确认号为0xF085093，即确认号等于上次握手序号+1。 12301/01-01:40:25.771844 0:16:EC:D2:50:7D -&gt; 0:19:21:57:7:85 type:0x800 len:0x3C192.168.1.104:1980 -&gt; 192.168.1.105:21 TCP TTL:128 TOS:0x0 ID:11764 IpLen:20 DgmLen:40 DF***A***F Seq: 0x75C7625B Ack: 0xF085093 Win: 0xFF84 TcpLen: 20 上边为连接释放的第三次握手，可以看到数据包从104发往105， ACK位设为1； FIN位设置为1； 序号为0x75C7625B，即序号等于上次握手序号； 确认号为0xF085093，即确认号等于上次握手确认号。 12301/01-01:40:25.771894 0:19:21:57:7:85 -&gt; 0:16:EC:D2:50:7D type:0x800 len:0x36192.168.1.105:21 -&gt; 192.168.1.104:1980 TCP TTL:128 TOS:0x0 ID:11667 IpLen:20 DgmLen:40 DF***A**** Seq: 0xF085093 Ack: 0x75C7625C Win: 0xFFE2 TcpLen: 20 上边为连接释放的第四次握手，可以看到数据包从105发往104， ACK位设为1； 序号为0xF085093，即序号等于上次握手确认号； 确认号为0x75C7625C，即确认号等于上次握手序号+1。 心得体会本次实验前在计算机网络课堂上还并没有学过TCP的连接过程如何建立与释放，仅仅听说过三次握手和四次握手。 通过这次实验，更加直观、具体地看到了TCP建立和释放连接的过程。在实验之后，又通过学习，对三次握手和四次握手的原理有了进一步的了解。 问：为什么建立连接是三次握手，释放连接是四次握手？ 答： 建立连接时，服务器收到客户的SYN连接请求报文，可以直接发送SYN+ACK报文，其中ACK报文是用来应答的，SYN报文是用来同步的。 当释放连接时，当服务器收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉客户端：“你发的FIN报文我收到了”。只有等到服务器所有的报文都发送完了，它才能发送FIN报文，因此ACK报文和FIN报文不能一起发送，故需要四步握手。 作者：@臭咸鱼 转载请注明出处：https://chouxianyu.github.io 欢迎讨论和交流!","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"计算机网络-实验（三）ARP欺骗","slug":"计算机网络-实验（三）ARP欺骗","date":"2019-06-05T11:41:40.000Z","updated":"2022-06-21T03:32:51.671Z","comments":true,"path":"2019/06/05/计算机网络-实验（三）ARP欺骗/","link":"","permalink":"http://example.com/2019/06/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E5%AE%9E%E9%AA%8C%EF%BC%88%E4%B8%89%EF%BC%89ARP%E6%AC%BA%E9%AA%97/","excerpt":"","text":"实验目的 掌握常见ARP欺骗类型和手段 掌握ARP协议工作原理和格式 掌握防范ARP地址欺骗的方法和措施 掌握Sniffer Pro软件的使用 实验环境 硬件 交换机1 台、路由器1台、计算机数台 软件 Sinffer pro 实验原理ARP协议简介ARP(Address Resolve Protocol)，地址解析协议。 用途：用于寻找和IP 地址相对应的MAC地址。 ARP消息类型： ARP request 即ARP请求分组，用于请求某IP主机的硬件地址。 广播。 ARP response 即ARP响应分组，用于指出某IP主机的硬件地址。 单播。 ARP报文中各字段的意义 硬件类型 以太网接口类型为1。 协议类型 IP协议类型为080016。 操作 ARP请求分组为1，ARP响应分组为2。 硬件地址长度 MAC地址长度为6BH。 协议地址长度 IP地址长度为4BH。 源MAC地址 发送方的MAC地址。 源IP地址 发送方的IP地址。 目的MAC 地址 ARP 请求分组中该字段没有意义；ARP 响应分组中为接收方的MAC地址。 目的IP 地址 ARP 请求分组中为请求解析的IP 地址；ARP 响应分组中为接收方的IP地址。 ARP欺骗原理ARP请求分组以广播形式发送，网络上的主机可以自主发送ARP应答消息； 当其他主机收到ARP响应分组时，不会检测该报文的真实性，直接将其记录在本地的MAC地址转换表。 就可以发送伪ARP响应分组，从而篡改本地的MAC地址表。 举例： 攻击者甲通过冒充某IP主机丙，给出错误的物理地址，并向另一主机乙单播一个ARP响应分组，这样乙接收到这个错误的IP与物理地址的映射，更新了ARP缓存表。 之后，主机乙使用ARP缓存表中该项时，则会出现错误。 实验步骤设置账户控制面板——用户账户——设置用户名为ligong，并设置密码。 设置FTP站点控制面板——Internet信息服务——FTP站点——硬件——安全账户——浏览——高级——选中ligong——允许匿名——应用、确定。 禁止网络保护右击屏幕右下角盾牌，取消Enable Auto Protection。 所用主机说明我们需要三台主机，分别为甲、乙、丙。 甲为监听并攻击者，乙为Ping命令&#x2F;FTP命令操作者，丙为IP地址提供者。 甲实现ARP欺骗后，乙无法Ping或无法通过FTP连接丙。 进行ARP欺骗在甲主机上进行操作。 打开Sniffer Pro，选中本机的网卡，并选中Log Off，点击确定。 点击菜单栏中File中的Log On，登录网卡。 打开菜单栏中display中的Define Filter； 选中Address选项卡，将Station1和Station2设置为Any（这样将监听网络上的所有消息，个人觉得可以只监听乙和丙）； 选中Advanced选项卡，选中ARP、IP、IP ARP、TCP、UDP和FTP。 打开菜单栏中Capture中的Start，开始监听。 点击左侧Connection，点击下侧的Objects选项。 在右侧找到乙对丙的ARP信息包，双击，再选择Decode选项，可以看到ARP分组的结构，我们对丙的MAC地址进行修改（右击——Edit）。 打开菜单栏中Tools中的Trace Route，实现ARP欺骗。 结果检验甲实现ARP欺骗后，乙Ping或通过ftp连接丙则会失败。 因为甲通过广播发出了错误的丙的物理地址，而乙接收到了这个错误的信息，在连接丙时则会使用这个错误的物理地址，造成无法连接。 实验心得ARP是建立在网络中各个主机互相信任的基础上的。 ARP欺骗可以导致计算机通信失败，更严重的是可以导致通信重定向，攻击者可以窃取被攻击者通信的数据，存在极大的安全隐患。 作者：@臭咸鱼 转载请注明出处：https://chouxianyu.github.io 欢迎讨论和交流!","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"计算机网络-实验（二）常用网络指令","slug":"计算机网络-实验（二）常用网络指令","date":"2019-04-10T12:34:44.000Z","updated":"2022-06-21T03:32:51.481Z","comments":true,"path":"2019/04/10/计算机网络-实验（二）常用网络指令/","link":"","permalink":"http://example.com/2019/04/10/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E5%AE%9E%E9%AA%8C%EF%BC%88%E4%BA%8C%EF%BC%89%E5%B8%B8%E7%94%A8%E7%BD%91%E7%BB%9C%E6%8C%87%E4%BB%A4/","excerpt":"","text":"实验目的 学会并掌握常用网络命令。 学会分析在不同参数下显示的数据。 实验仪器PC机、局域网 常用命令arp知识点扫盲：地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP&#x2F;IP协议。 功能：显示和修改IP地址与物理地址之间的转换表 -a功能：（Windows下）显示当前的ARP信息，可以指定网络地址。 Linux系统中，使用-g。 代码： 1arp -a # 显示当前所有的ARP信息 结果： Internet Address Physical Address Type 192.168.1.178 00-16-ec-a0-42-fa dynamic ..… ..… ..… 代码： 1arp -a 192.168.1.178 # 显示指定IP(即192.168.1.178)的ARP信息 结果： Internet Address Physical Address Type 192.168.1.178 00-16-ec-a0-42-fa dynamic -s功能：添加主机，并将网络地址跟物理地址相对应，这一项是永久生效的。 代码： 12arp -s 157.55.85.212 00-aa-00-62-c6-09 # 在IP和物理地址转换表中添加一项arp -a 157.55.85.212 # 显示指定IP(即157.55.85.212)的ARP信息 结果： Internet Address Physical Address Type 157.55.85.212 00-aa-00-62-c6-09 static 注意：这里添加的一个Type为static的。 -d功能：删除指定的主机，可以使用* 来删除所有主机。 代码： 12arp -d 157.55.85.212 # 删除指定IP(即157.55.85.212)arp -a 157.55.85.212 # 显示指定IP(即157.55.85.212)的ARP信息 结果： 1NO ARP Entries Found ftp知识点扫盲：文件传输协议，即FTP(File Transfer Protocol)。是用于在网络上进行文件传输的一套标准协议，使用客户&#x2F;服务器模式。它属于网络传输协议。 ftp也是一种服务。一旦启动，将创建在其中可以使用ftp命令的子环境，通过键入 quit子命令可以从子环境返回到Windows命令提示符。当 ftp 子环境运行时，它由ftp命令提示符代表。 下边的指令除了ftp是在Windows命令提示符，其他都是在ftp的子环境里。 功能：控制文件的双向传输（老师说的..…）。 ftp功能：启动ftp服务。 在命令提示符下，直接输入ftp即可。 open代码： 1open 192.168.1.171 # 连接指定的ftp服务器（这里是老师的电脑） 结果： 12345678Connected to 192.168.1.171.220-Microsoft FTP Service220 张芳之家User (192.168.1.171:(none)): zf331 Password required for zf.Password:230-欢迎进入“张芳之家”230 User zf logged in. 注意：上边的第6行需要输入密码。我们输的时候，屏幕上并不会显示出来。 dir功能：查看本目录下的内容，目录可以理解成文件夹的意思。 代码： 1dir # 查看当前目录内容 结果： 12345200 PORT command successful. # 请求成功150 Opening ASCII mode data connection for /bin/ls. # ASCII传输方式连接/bin/ls04-26-13 08:22AM &lt;DIR&gt; 654 # 有个文件夹，名字是654226 Transfer complete.ftp: 收到 44 字节，用时 0.00 Seconds 44000.00Kbyte/sec. cd功能：更换远程目录。 12cd 654 # 进入文件夹654dir # 查看当前目录内容 结果： 12345200 PORT command successful. # 请求成功150 Opening ASCII mode data connection for /bin/ls. # ASCII传输方式连接/bin/ls04-26-13 08:22AM 70 qqq.txt # 有个文件，名字是qqq.txt226 Transfer complete.ftp: 收到 48 字节，用时 0.00 Seconds 44000.00Kbyte/sec. lcd功能：更换本地目录，若无参数，将显示当前目录。 代码： 1lcd e:\\ 结果： 1Local directory now E:\\. get功能：将远程文件复制到本地计算机。 代码： 1get qqq.txt 结果： 1234200 PORT command successful. # 请求成功150 Opening ASCII mode data connection for qqq.txt(70 bytes) # ASCII传输方式连接/bin/ls226 Transfer complete.ftp: 收到 70 字节，用时 0.00 Seconds 70000.00Kbyte/sec. quit功能：退出ftp服务。ftp子环境下输入quit即可。 结果： 1221 再见！欢迎下次“张芳之家” ipconfig功能：显示当前的TCP&#x2F;IP配置的设置值。 代码： 1ipconfig 结果： 1234567Windows IP ConfigurationEthernet adapter 本地连接: Connection-specific DNS Suffix . : IP Address. . . . . . . . . . . . : 192.168.1.95 # IP地址 Subnet Mask . . . . . . . . . . . : 255.255.255.0 # 子网掩码 Default Gateway . . . . . . . . . : 192.168.1.3 # 缺省网关 telnet知识点扫盲：Telnet协议是TCP&#x2F;IP协议族中的一员，是Internet远程登录服务的标准协议和主要方式。 功能：远程连接另一台计算机 telnet功能：启动telnet。 在命令提示符下，直接输入telnet即可。 open功能：连接指定计算机。 代码： 1open 192.168.1.94 # 连接我同桌.. 结果： 12345正在连接到192.168.1.94... 您将要发送密码信息到 Internet 区域中的远程计算机。这可能不安全。是否还要发送(y/n): nlogin:ligongpassword: 注意：第四行和第五行输入账号和密码，密码并不会显示出来。 copy功能：复制文件到自己电脑上 代码： 1copy qqq.txt c:\\ # 复制其e盘qqq.txt到其c盘，前提是此时已在E盘，使用cd e:\\实现 quit退出，直接输入quit即可。 net知识点扫盲：它包含了管理网络环境、服务、用户、登陆等Windows 98&#x2F;NT&#x2F;2000 中大部分重要的管理功能。 send功能：将消息发送到网络上的其他用户、计算机或消息名。必须运行信使服务以接收邮件。 代码： 1net send * 123 # 给所有人发123 结果： 1消息已经送到域 2HJF 代码： 1net send s14 hello # 给s14机器发hello 结果： 1消息已经送到 S14 作者：@臭咸鱼 转载请注明出处：https://chouxianyu.github.io 欢迎讨论和交流!","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]}],"categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]}